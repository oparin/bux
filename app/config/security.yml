security:
    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
#        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
#        in_memory:
#            memory:
#                users:
#                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
        fos_userbundle:
            id: fos_user.user_provider.username_email

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
#
#        login:
#            pattern:  ^/demo/secured/login$
#            security: false
#
#        secured_area:
#            pattern:    ^/demo/secured/
#            form_login:
#                check_path: _security_check
#                login_path: _demo_login
#            logout:
#                path:   _demo_logout
#                target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"
        admin:
            pattern:  /monacolistinggg(.*)
            form_login:
                provider:   fos_userbundle
                login_path: /monacolistinggg/login
                check_path:     /monacolistinggg/login_check
                default_target_path: /monacolistinggg/dashboard
            logout:
                path:           /monacolistinggg/logout
                target:         /monacolistinggg/login
            anonymous:  true
        main:
            pattern: ^/.*
            form_login:
                provider: fos_userbundle
                csrf_provider: form.csrf_provider
                default_target_path:  /office/account
                login_path: /login#login
            logout:       ~
            anonymous:    true
            security: true


    access_control:
#        - { path: ^/demo/secured/hello/admin/, roles: ROLE_ADMIN }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/monacolistinggg/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/monacolistinggg/, role: ROLE_ADMIN }

        - { path: ^/$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/office/account/add-funds/perfect-money-success, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/office/account/add-funds/payeer-callback, role: IS_AUTHENTICATED_ANONYMOUSLY }


        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/blog, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/office/office-secret-user-login, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/advertise$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/contact$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/earn-money$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/testimonials$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/faq$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/about$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/terms$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/office/banner-complete$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/office/vip-banner-complete$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/.*, role: ROLE_USER }

